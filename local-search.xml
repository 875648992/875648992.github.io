<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/hello-world%20copy/"/>
    <url>/2019/10/10/hello-world%20copy/</url>
    
    <content type="html"><![CDATA[<ol><li>安装依赖：postcss-pxtorem 5.1.1</li><li>vue2项目 在根目录下新增.postcssrc.js  关键要配置rootValue和propList</li></ol><span class="label label-primary">text</span><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;  <span class="hljs-attr">plugins</span>: [      <span class="hljs-string">&#x27;autoprefixer&#x27;</span>,      [<span class="hljs-string">&#x27;postcss-pxtorem&#x27;</span>, &#123;        <span class="hljs-attr">rootValue</span>: <span class="hljs-number">100</span>, <span class="hljs-comment">// 换算基数 12*100</span>        <span class="hljs-attr">unitPrecision</span>: <span class="hljs-number">3</span>,         <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#x27;*&#x27;</span>],        <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/(node_module)/</span>, <span class="hljs-comment">// 默认false，，过滤/(node_module)/ 。如果想把前端UI框架内的px也转换成rem，就不要过滤</span>        <span class="hljs-attr">mediaQuery</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// （布尔值）允许在媒体查询中转换px。</span>        <span class="hljs-attr">minPixelValue</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 设置要替换的最小像素值</span>      &#125;]    ]&#125;;</code></pre></div><p>3、在移动端的入口文件配置设置根目录font-size的方法 </p><ul><li>rem 适配方法</li></ul><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 设备判断</span><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">remSize</span>(<span class="hljs-params">noRest</span>) &#123;  <span class="hljs-keyword">let</span> winWidth;  <span class="hljs-comment">// 获取窗口宽度</span>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>) &#123;    winWidth = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>;  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>) &amp;&amp; (<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>)) &#123;    winWidth = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>;  &#125;  <span class="hljs-comment">// 通过深入Document内部对body进行检测，获取窗口大小</span>  <span class="hljs-keyword">if</span> (    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>    &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>    &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>  ) &#123;    winWidth = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>;  &#125;  <span class="hljs-comment">// 修改font-size</span>  <span class="hljs-keyword">const</span> fontSize = ((winWidth / <span class="hljs-number">375</span>) * <span class="hljs-number">100</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">4</span>);  <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;fontSize&#125;</span>px`</span>;  <span class="hljs-comment">// 适配对font-size额外处理的手机</span>  <span class="hljs-keyword">const</span> nowFontSize = <span class="hljs-built_in">parseFloat</span>(<span class="hljs-title function_">getComputedStyle</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>, <span class="hljs-literal">false</span>)[<span class="hljs-string">&#x27;font-size&#x27;</span>]).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">4</span>);  <span class="hljs-keyword">if</span> (noRest !== <span class="hljs-literal">true</span> &amp;&amp; <span class="hljs-string">`<span class="hljs-subst">$&#123;nowFontSize&#125;</span>`</span> !== fontSize) &#123;    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;(fontSize * fontSize) / nowFontSize&#125;</span>px`</span>;  &#125;&#125;</code></pre></div><ul><li>main.js中使用</li></ul><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> remSize <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./remSize&#x27;</span>;<span class="hljs-keyword">let</span> noReset;<span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">top</span> === <span class="hljs-variable language_">window</span>.<span class="hljs-property">self</span>) &#123;  <span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = <span class="hljs-function">() =&gt;</span> &#123;    <span class="hljs-title function_">remSize</span>(noReset);  &#125;;  <span class="hljs-comment">// 安卓10以上不需要处理修改系统字体大小</span>  <span class="hljs-keyword">if</span> (判断是否安卓) &#123;    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$isAndroid10</span>.<span class="hljs-title function_">getHTTPRequestHeaders</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">&#123; data = &#123;&#125; &#125;</span>) =&gt;</span> &#123;      <span class="hljs-keyword">const</span> version = data[<span class="hljs-string">&#x27;x-rpc-sys_version&#x27;</span>] || <span class="hljs-string">&#x27;&#x27;</span>;      <span class="hljs-keyword">const</span> [v] = version.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>);      noReset = <span class="hljs-title class_">Number</span>(v) &gt;= <span class="hljs-number">10</span>;      <span class="hljs-title function_">remSize</span>(noReset);    &#125;);  &#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-title function_">remSize</span>(noReset);  &#125;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>ccc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/hello-world/"/>
    <url>/2019/10/10/hello-world/</url>
    
    <content type="html"><![CDATA[<ol><li>安装依赖：postcss-pxtorem 5.1.1</li><li>vue2项目 在根目录下新增.postcssrc.js  关键要配置rootValue和propList</li></ol><span class="label label-primary">text</span><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;  <span class="hljs-attr">plugins</span>: [      <span class="hljs-string">&#x27;autoprefixer&#x27;</span>,      [<span class="hljs-string">&#x27;postcss-pxtorem&#x27;</span>, &#123;        <span class="hljs-attr">rootValue</span>: <span class="hljs-number">100</span>, <span class="hljs-comment">// 换算基数 12*100</span>        <span class="hljs-attr">unitPrecision</span>: <span class="hljs-number">3</span>,         <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#x27;*&#x27;</span>],        <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/(node_module)/</span>, <span class="hljs-comment">// 默认false，，过滤/(node_module)/ 。如果想把前端UI框架内的px也转换成rem，就不要过滤</span>        <span class="hljs-attr">mediaQuery</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// （布尔值）允许在媒体查询中转换px。</span>        <span class="hljs-attr">minPixelValue</span>: <span class="hljs-number">1</span> <span class="hljs-comment">// 设置要替换的最小像素值</span>      &#125;]    ]&#125;;</code></pre></div><p>3、在移动端的入口文件配置设置根目录font-size的方法 </p><ul><li>rem 适配方法</li></ul><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 设备判断</span><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">remSize</span>(<span class="hljs-params">noRest</span>) &#123;  <span class="hljs-keyword">let</span> winWidth;  <span class="hljs-comment">// 获取窗口宽度</span>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>) &#123;    winWidth = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>;  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>) &amp;&amp; (<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>)) &#123;    winWidth = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>;  &#125;  <span class="hljs-comment">// 通过深入Document内部对body进行检测，获取窗口大小</span>  <span class="hljs-keyword">if</span> (    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>    &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>    &amp;&amp; <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>  ) &#123;    winWidth = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>;  &#125;  <span class="hljs-comment">// 修改font-size</span>  <span class="hljs-keyword">const</span> fontSize = ((winWidth / <span class="hljs-number">375</span>) * <span class="hljs-number">100</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">4</span>);  <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;fontSize&#125;</span>px`</span>;  <span class="hljs-comment">// 适配对font-size额外处理的手机</span>  <span class="hljs-keyword">const</span> nowFontSize = <span class="hljs-built_in">parseFloat</span>(<span class="hljs-title function_">getComputedStyle</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>, <span class="hljs-literal">false</span>)[<span class="hljs-string">&#x27;font-size&#x27;</span>]).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">4</span>);  <span class="hljs-keyword">if</span> (noRest !== <span class="hljs-literal">true</span> &amp;&amp; <span class="hljs-string">`<span class="hljs-subst">$&#123;nowFontSize&#125;</span>`</span> !== fontSize) &#123;    <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;(fontSize * fontSize) / nowFontSize&#125;</span>px`</span>;  &#125;&#125;</code></pre></div><ul><li>main.js中使用</li></ul><div class="code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> remSize <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./remSize&#x27;</span>;<span class="hljs-keyword">let</span> noReset;<span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">top</span> === <span class="hljs-variable language_">window</span>.<span class="hljs-property">self</span>) &#123;  <span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = <span class="hljs-function">() =&gt;</span> &#123;    <span class="hljs-title function_">remSize</span>(noReset);  &#125;;  <span class="hljs-comment">// 安卓10以上不需要处理修改系统字体大小</span>  <span class="hljs-keyword">if</span> (判断是否安卓) &#123;    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$isAndroid10</span>.<span class="hljs-title function_">getHTTPRequestHeaders</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">&#123; data = &#123;&#125; &#125;</span>) =&gt;</span> &#123;      <span class="hljs-keyword">const</span> version = data[<span class="hljs-string">&#x27;x-rpc-sys_version&#x27;</span>] || <span class="hljs-string">&#x27;&#x27;</span>;      <span class="hljs-keyword">const</span> [v] = version.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>);      noReset = <span class="hljs-title class_">Number</span>(v) &gt;= <span class="hljs-number">10</span>;      <span class="hljs-title function_">remSize</span>(noReset);    &#125;);  &#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-title function_">remSize</span>(noReset);  &#125;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
